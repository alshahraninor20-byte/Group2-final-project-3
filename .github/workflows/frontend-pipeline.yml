name: build and deploy frontend

on:

  workflow_dispatch:

jobs:
  build:
    name: deploy frontend
    runs-on: ubuntu-latest
    environment: dev
    steps:
      - name: checkout code
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Install dependencies
        run: npm ci
        working-directory: app/frontend

      - name: Build frontend
        run: CI=false npm run build
        working-directory: app/frontend

      - name: Run tests
        run: npm test --if-present -- --passWithNoTests
        working-directory: app/frontend

      - name: Login to Azure
        if: github.event_name == 'workflow_dispatch'
        uses: azure/login@v2
        with: 
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Set AKS context
        if: github.event_name == 'workflow_dispatch'
        run: az aks get-credentials --resource-group prg3-group2 --name group2-project-aks-cluster --overwrite-existing

      - name: Verify cluster
        if: github.event_name == 'workflow_dispatch'
        run: kubectl get nodes

      - name: get ingress lb IP 
        if: github.event_name == 'workflow_dispatch'
        run: |
          echo "INGRESS_LB_IP=$(kubectl get svc ingress-nginx-controller -n ingress-nginx -o jsonpath='{.status.loadBalancer.ingress[0].ip}'
          )" >> $GITHUB_ENV

      - name: Login to Docker Hub
        if: github.event_name == 'workflow_dispatch'
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Build frontend Docker image
        if: github.event_name == 'workflow_dispatch'
        run: |
          IMAGE_NAME=${{ secrets.DOCKER_USERNAME }}/app-frontend
          SHA_TAG=$(echo $GITHUB_SHA | cut -c1-7)
          docker build --build-arg VITE_API_BASE_URL=http://$INGRESS_LB_IP/api \
            -t $IMAGE_NAME:latest \
            -t $IMAGE_NAME:$SHA_TAG .
          echo "IMAGE_NAME=$IMAGE_NAME" >> $GITHUB_ENV
          echo "IMAGE_TAG=$SHA_TAG" >> $GITHUB_ENV
        working-directory: app/frontend

      - name: Push Docker image
        if: github.event_name == 'workflow_dispatch'
        run: |
          docker push ${{ env.IMAGE_NAME }}:latest
          docker push ${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}

      - name: Update K8s deployment with SHA image
        if: github.event_name == 'workflow_dispatch'
        run: |
          kubectl set image deployment/burger-app-frontend \
            burger-app-frontend=${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }} -n project3
          kubectl rollout status deployment/burger-app-frontend -n project3
        working-directory: k8s/frontend
